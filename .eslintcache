[{"/Users/taerikim/Documents/web/Project/taeflix-plus/src/index.tsx":"1","/Users/taerikim/Documents/web/Project/taeflix-plus/src/App.tsx":"2","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/MyList.tsx":"3","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Home.tsx":"4","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Detail.tsx":"5","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Navigator.tsx":"6","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Auth.tsx":"7","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Movie.tsx":"8","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/PageNotFound.tsx":"9"},{"size":196,"mtime":1631958247300,"results":"10","hashOfConfig":"11"},{"size":1292,"mtime":1632070496206,"results":"12","hashOfConfig":"11"},{"size":2183,"mtime":1631958683990,"results":"13","hashOfConfig":"11"},{"size":2197,"mtime":1631973437377,"results":"14","hashOfConfig":"11"},{"size":2415,"mtime":1631981738723,"results":"15","hashOfConfig":"11"},{"size":937,"mtime":1631984324177,"results":"16","hashOfConfig":"11"},{"size":2561,"mtime":1631985267031,"results":"17","hashOfConfig":"11"},{"size":1849,"mtime":1631979219065,"results":"18","hashOfConfig":"11"},{"size":180,"mtime":1632070092206,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"121n7gn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/taerikim/Documents/web/Project/taeflix-plus/src/index.tsx",[],["42","43"],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/App.tsx",["44"],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/MyList.tsx",["45","46","47","48"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport Movie from '../components/Movie'\nimport './MyList.css'\n\n\n\nconst MyList =()=>{\n\n    //  const [movies,setMovies] = useState([])\n    //  const [isLoading,setLoading] = useState(true) \n    //  const getMovies = async () => {\n    //      const {\n    //        data: {\n    //          data: { movies }\n    //        }\n    //      } = await axios.get(\n    //        \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    //      );\n    //      setMovies(movies)\n    //      setLoading(false)\n    //    };\n\n    // useEffect(()=> {\n    //    const CURRENT_USER_LS = 'currentUser'\n    //   if(location.state === undefined && !(localStorage.getItem(CURRENT_USER_LS))){\n    //       history.push('/');\n    //   }\n    //   getMovies();\n    // },[])\n\n    //   const USERNAME = localStorage.getItem('currentUser')\n    //     const listNumber = localStorage.getItem(USERNAME)? JSON.parse(localStorage.getItem(USERNAME)).map(x => x.id) : null;\n    //     const movieList = listNumber !== null ? listNumber.map(x => movies[x]) : null;\n    //     if(listNumber !== null) {\n    //         return (\n    //             <>\n    //             {isLoading ? <h1 className='loading'>Loading..</h1> :\n    //             <>\n    //             <div className='mylist_title'>MY LIST</div>\n    //             <div className='mylistbox'>\n    //                 {movieList.map((movie,index) => \n    //               <Movie \n    //               key={index} \n    //               id={index} \n    //               title={movie.title} \n    //               image={movie.medium_cover_image}\n    //               year={movie.year}\n    //               runtime={movie.runtime}\n    //               genres={movie.genres}\n    //               summary={movie.summary}\n    //               largeImage={movie.large_cover_image}\n    //               />)}\n    //             </div>\n    //             </>\n    //             }\n    //             </>        \n    //             )\n            \n    //     }else {\n    //         return <h1 className='loading'>EMPTY </h1>\n    //     }\n    return <div>My list</div>\n}\n\nexport default MyList;","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Home.tsx",["49"],"import axios from 'axios';\nimport Movie from '../components/Movie'\nimport React, { useEffect, useState } from 'react'\nimport BestMovie from '../components/BestMovie'\nimport './Home.css'\n\ninterface MoviesState {\n  title:string;\n  year:number;\n  runtime:number;\n  genres:string[];\n  large_cover_image:string;\n  summary:string;\n  id:number;\n  medium_cover_image:string;\n}\n\nconst Home = () => {\n    const [movies,setMovies] = useState<MoviesState[]>([])\n    const [isLoading,setLoading] = useState(true) \n\n   const getMovies = async () => {\n        const {\n          data: {\n            data: { movies }\n          }\n        } = await axios.get(\n          \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n        );\n        setMovies(movies)\n        setLoading(false)\n      };\n      useEffect(()=> {\n\n        getMovies();\n      },[])\n    \n        return (\n        <section className='container'>\n            {isLoading? <h1 className='loading'>Loading...</h1> \n            :<div className='movies'>\n            {/* <div className='bestMovie_container'>\n              <div className='movie1'>\n              <BestMovie title={movies[0].title} image={movies[0].large_cover_image}></BestMovie>\n              </div>\n              <div className='sidebox'>\n                <div className='movie2'>\n              <BestMovie title={movies[1].title} image={movies[1].large_cover_image}></BestMovie>    \n                </div>\n                <div className='movie3'>\n              <BestMovie title={movies[2].title} image={movies[2].large_cover_image}></BestMovie>\n                </div>\n            </div>\n              </div> */}\n            <div className='movie_container'>\n              {movies.map((movie,index) => \n              <Movie \n              key={movie.id} \n              id={index} \n              title={movie.title} \n              image={movie.medium_cover_image}\n              year={movie.year}\n              runtime={movie.runtime}\n              genres={movie.genres}\n              summary={movie.summary}\n              largeImage={movie.large_cover_image}\n              />)}\n            </div>\n            </div>\n            }\n        </section>\n        )\n}\n\nexport default Home; ","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Detail.tsx",["50","51","52"],"import React, { useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router'\nimport './Detail.css'\n\ninterface ILocation {\n    hash:string;\n    pathname:string;\n    search:string;\n    state:{\n        genres:string[]\n        id:number;\n        largeImage:string;\n        runtime:number;\n        summary:string;\n        title:string;\n        year:number;\n    }\n}\n\nconst Detail = () => {\n    const location:ILocation = useLocation()\n    const history = useHistory()\n    console.log(location)\n   \n    // const USERNAME = localStorage.getItem('currentUser')\n    // console.log(USERNAME)\n    // // const [id,setId] = useState(localStorage.getItem(USERNAME)?JSON.parse(localStorage.getItem(USERNAME)):[])\n\n\n    useEffect(() => {\n        if(location.state === undefined){\n            history.push('/')\n        }\n\n    },[])\n\n    // // useEffect(()=> {\n    // //     const USERNAME = localStorage.getItem('currentUser')\n    // //     localStorage.setItem(USERNAME,JSON.stringify(id))\n    // // })\n\n\n    //     const onClick = () => {\n    //         // const newId = {\n    //         //     id:location.state.id\n    //         // }\n    //         // setId(id.concat(newId))\n    //     }\n\n        const onExitBtnClick = () => {\n            history.push('/')\n        }\n        if(location.state){\n        return (\n            <div className='detail_overlay' onClick={onExitBtnClick}>\n            <div className='detailbox'>\n                <div className='imgbox'>\n                <img src={location.state.largeImage} alt={location.state.title}/>\n                </div>\n                <div className='detail_info'>\n                <span className='title'>{location.state.title}</span>\n                <div className='detail_infobox'>\n                <span className='detail_year'>{location.state.year}</span>\n                <span className='detail_runtime'>{`${location.state.runtime}m`}</span>\n                {/* <button onClick={onClick}>+ My List</button> */}\n                </div>\n                <ul className='genre'>\n                    {location.state.genres.map((genre,index)=> (<li key={index}>{genre}</li>))}\n                    </ul>\n                <span className='summary'>{location.state.summary}</span>\n                </div>\n            </div>\n            </div>\n        )\n        }else {\n            return null;\n        }\n    return <div>Detail</div>\n}\n\nexport default Detail;","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Navigator.tsx",[],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Auth.tsx",["53","54","55","56","57"],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Movie.tsx",[],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/PageNotFound.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":20},{"ruleId":"62","severity":1,"message":"66","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"67","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"68","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"69","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"70","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":17},{"ruleId":"62","severity":1,"message":"67","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"72","line":35,"column":7,"nodeType":"73","endLine":35,"endColumn":9,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":78,"column":5,"nodeType":"77","messageId":"78","endLine":78,"endColumn":29},{"ruleId":"62","severity":1,"message":"66","line":2,"column":17,"nodeType":"64","messageId":"65","endLine":2,"endColumn":26},{"ruleId":"62","severity":1,"message":"79","line":2,"column":28,"nodeType":"64","messageId":"65","endLine":2,"endColumn":34},{"ruleId":"62","severity":1,"message":"80","line":3,"column":9,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"81","line":38,"column":15,"nodeType":"64","messageId":"65","endLine":38,"endColumn":26},{"ruleId":"62","severity":1,"message":"82","line":46,"column":19,"nodeType":"64","messageId":"65","endLine":46,"endColumn":28},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'PageNotFound' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Movie' is defined but never used.","'BestMovie' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["85"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'useRef' is defined but never used.","'User' is defined but never used.","'onBtnDelete' is assigned a value but never used.","'onBtnBack' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [history, location.state]",{"range":"88","text":"89"},[839,841],"[history, location.state]"]