[{"/Users/taerikim/Documents/web/Project/taeflix-plus/src/index.tsx":"1","/Users/taerikim/Documents/web/Project/taeflix-plus/src/App.tsx":"2","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/MyList.tsx":"3","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Home.tsx":"4","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Detail.tsx":"5","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Navigator.tsx":"6","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Auth.tsx":"7","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Movie.tsx":"8"},{"size":196,"mtime":1631958247300,"results":"9","hashOfConfig":"10"},{"size":1218,"mtime":1631985112734,"results":"11","hashOfConfig":"10"},{"size":2183,"mtime":1631958683990,"results":"12","hashOfConfig":"10"},{"size":2197,"mtime":1631973437377,"results":"13","hashOfConfig":"10"},{"size":2415,"mtime":1631981738723,"results":"14","hashOfConfig":"10"},{"size":937,"mtime":1631984324177,"results":"15","hashOfConfig":"10"},{"size":2902,"mtime":1631972017163,"results":"16","hashOfConfig":"10"},{"size":1849,"mtime":1631979219065,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"121n7gn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/taerikim/Documents/web/Project/taeflix-plus/src/index.tsx",[],["38","39"],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/App.tsx",[],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/MyList.tsx",["40","41","42","43"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport Movie from '../components/Movie'\nimport './MyList.css'\n\n\n\nconst MyList =()=>{\n\n    //  const [movies,setMovies] = useState([])\n    //  const [isLoading,setLoading] = useState(true) \n    //  const getMovies = async () => {\n    //      const {\n    //        data: {\n    //          data: { movies }\n    //        }\n    //      } = await axios.get(\n    //        \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    //      );\n    //      setMovies(movies)\n    //      setLoading(false)\n    //    };\n\n    // useEffect(()=> {\n    //    const CURRENT_USER_LS = 'currentUser'\n    //   if(location.state === undefined && !(localStorage.getItem(CURRENT_USER_LS))){\n    //       history.push('/');\n    //   }\n    //   getMovies();\n    // },[])\n\n    //   const USERNAME = localStorage.getItem('currentUser')\n    //     const listNumber = localStorage.getItem(USERNAME)? JSON.parse(localStorage.getItem(USERNAME)).map(x => x.id) : null;\n    //     const movieList = listNumber !== null ? listNumber.map(x => movies[x]) : null;\n    //     if(listNumber !== null) {\n    //         return (\n    //             <>\n    //             {isLoading ? <h1 className='loading'>Loading..</h1> :\n    //             <>\n    //             <div className='mylist_title'>MY LIST</div>\n    //             <div className='mylistbox'>\n    //                 {movieList.map((movie,index) => \n    //               <Movie \n    //               key={index} \n    //               id={index} \n    //               title={movie.title} \n    //               image={movie.medium_cover_image}\n    //               year={movie.year}\n    //               runtime={movie.runtime}\n    //               genres={movie.genres}\n    //               summary={movie.summary}\n    //               largeImage={movie.large_cover_image}\n    //               />)}\n    //             </div>\n    //             </>\n    //             }\n    //             </>        \n    //             )\n            \n    //     }else {\n    //         return <h1 className='loading'>EMPTY </h1>\n    //     }\n    return <div>My list</div>\n}\n\nexport default MyList;","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Home.tsx",["44"],"import axios from 'axios';\nimport Movie from '../components/Movie'\nimport React, { useEffect, useState } from 'react'\nimport BestMovie from '../components/BestMovie'\nimport './Home.css'\n\ninterface MoviesState {\n  title:string;\n  year:number;\n  runtime:number;\n  genres:string[];\n  large_cover_image:string;\n  summary:string;\n  id:number;\n  medium_cover_image:string;\n}\n\nconst Home = () => {\n    const [movies,setMovies] = useState<MoviesState[]>([])\n    const [isLoading,setLoading] = useState(true) \n\n   const getMovies = async () => {\n        const {\n          data: {\n            data: { movies }\n          }\n        } = await axios.get(\n          \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n        );\n        setMovies(movies)\n        setLoading(false)\n      };\n      useEffect(()=> {\n\n        getMovies();\n      },[])\n    \n        return (\n        <section className='container'>\n            {isLoading? <h1 className='loading'>Loading...</h1> \n            :<div className='movies'>\n            {/* <div className='bestMovie_container'>\n              <div className='movie1'>\n              <BestMovie title={movies[0].title} image={movies[0].large_cover_image}></BestMovie>\n              </div>\n              <div className='sidebox'>\n                <div className='movie2'>\n              <BestMovie title={movies[1].title} image={movies[1].large_cover_image}></BestMovie>    \n                </div>\n                <div className='movie3'>\n              <BestMovie title={movies[2].title} image={movies[2].large_cover_image}></BestMovie>\n                </div>\n            </div>\n              </div> */}\n            <div className='movie_container'>\n              {movies.map((movie,index) => \n              <Movie \n              key={movie.id} \n              id={index} \n              title={movie.title} \n              image={movie.medium_cover_image}\n              year={movie.year}\n              runtime={movie.runtime}\n              genres={movie.genres}\n              summary={movie.summary}\n              largeImage={movie.large_cover_image}\n              />)}\n            </div>\n            </div>\n            }\n        </section>\n        )\n}\n\nexport default Home; ","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Detail.tsx",["45","46","47"],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Navigator.tsx",[],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Auth.tsx",["48","49","50","51","52","53","54","55","56","57"],"\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router';\nimport  User  from '../components/User';\nimport './Auth.css'\n\nconst USERS_LS = 'users'\nconst CLASS_HIDDEN = 'hidden'\nconst CURRENT_USER_LS = 'currentUser'\ninterface AuthProps {\n    USER_LS:string\n    loginUser: () => void\n}\n\nconst Auth = ({USER_LS,loginUser}:AuthProps) => {\n\n    const [name,setName] = useState('')\n    // const [items,setItems] = useState(localStorage.getItem(USERS_LS)?JSON.parse(localStorage.getItem(USERS_LS)):[])\n    const inputBox = useRef()\n    const UserBox = useRef()\n\n\n        const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            if (name.length === 0){\n                return;\n            }\n            // const newItem ={\n            //     name,\n            //     id: Date.now()\n            // };\n            // if (items !== []){\n            //     localStorage.setItem(USERS_LS,JSON.stringify(items.concat(newItem)))\n            // }\n            // setItems(items.concat(newItem))\n            localStorage.setItem(USER_LS, name)\n            loginUser()\n            setName('')\n            // history.push({\n            //     pathname:'/browse',\n            //     state:{name:newItem.name,id:newItem.id}\n            // })\n         }\n        const onChange = (e:React.ChangeEvent<HTMLInputElement>) =>{\n            setName(e.target.value)   \n            }\n\n        const onBtnDelete = () => {\n                // const cleanToDos = items.filter(function (toDo) {\n                //     return toDo.id !== parseInt(e.target.parentNode.id);\n                // });\n                // localStorage.setItem(USERS_LS,JSON.stringify(cleanToDos))\n                // setItems(cleanToDos)\n            }\n\n            const onBtnBack = ()=>{\n            }\n\n        return(\n            <section className='profile_container'>\n            <div className='inputbox' >\n            <span className='title'>프로필 추가</span>\n            <span className='desc'>다른 사용자를 등록하시려면 프로필을 추가하세요.</span>\n            <form onSubmit={onSubmit}>\n                <input type='text' placeholder='이름'\n                value={name}\n                onChange={onChange}/>\n                <button>확인</button>\n            </form>\n            </div>\n            \n            {\n            //유저목록 \n            /* <div className='profilebox'>\n                <span className='title'>프로필 관리</span>\n                <a onClick={onBtnBack}>Back</a>\n            <div className='userbox'>\n                </div>\n            </div> */}\n            {/* {items.map(item => (\n                <User \n                key={item.id}\n                id={item.id} \n                onBtnClick={onBtnDelete} \n                name={item.name}></User>))} */}\n    </section>\n        )\n}\n\nexport default Auth","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Movie.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"67","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"68","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"69","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":35,"column":7,"nodeType":"72","endLine":35,"endColumn":9,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":78,"column":5,"nodeType":"76","messageId":"77","endLine":78,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":2,"column":17,"nodeType":"64","messageId":"65","endLine":2,"endColumn":26},{"ruleId":"62","severity":1,"message":"78","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":20},{"ruleId":"62","severity":1,"message":"79","line":4,"column":9,"nodeType":"64","messageId":"65","endLine":4,"endColumn":13},{"ruleId":"62","severity":1,"message":"80","line":7,"column":7,"nodeType":"64","messageId":"65","endLine":7,"endColumn":15},{"ruleId":"62","severity":1,"message":"81","line":8,"column":7,"nodeType":"64","messageId":"65","endLine":8,"endColumn":19},{"ruleId":"62","severity":1,"message":"82","line":9,"column":7,"nodeType":"64","messageId":"65","endLine":9,"endColumn":22},{"ruleId":"62","severity":1,"message":"83","line":19,"column":11,"nodeType":"64","messageId":"65","endLine":19,"endColumn":19},{"ruleId":"62","severity":1,"message":"84","line":20,"column":11,"nodeType":"64","messageId":"65","endLine":20,"endColumn":18},{"ruleId":"62","severity":1,"message":"85","line":48,"column":15,"nodeType":"64","messageId":"65","endLine":48,"endColumn":26},{"ruleId":"62","severity":1,"message":"86","line":56,"column":19,"nodeType":"64","messageId":"65","endLine":56,"endColumn":28},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'Movie' is defined but never used.","'BestMovie' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["89"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'useHistory' is defined but never used.","'User' is defined but never used.","'USERS_LS' is assigned a value but never used.","'CLASS_HIDDEN' is assigned a value but never used.","'CURRENT_USER_LS' is assigned a value but never used.","'inputBox' is assigned a value but never used.","'UserBox' is assigned a value but never used.","'onBtnDelete' is assigned a value but never used.","'onBtnBack' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [history, location.state]",{"range":"92","text":"93"},[839,841],"[history, location.state]"]