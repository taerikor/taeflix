[{"/Users/taerikim/Documents/web/Project/taeflix-plus/src/index.tsx":"1","/Users/taerikim/Documents/web/Project/taeflix-plus/src/App.tsx":"2","/Users/taerikim/Documents/web/Project/taeflix-plus/src/Router.tsx":"3","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Auth.tsx":"4","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/MyList.tsx":"5","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Home.tsx":"6","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Detail.tsx":"7","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Navigator.tsx":"8"},{"size":196,"mtime":1631958247300,"results":"9","hashOfConfig":"10"},{"size":125,"mtime":1631958275639,"results":"11","hashOfConfig":"10"},{"size":773,"mtime":1631958256467,"results":"12","hashOfConfig":"10"},{"size":2600,"mtime":1631958421832,"results":"13","hashOfConfig":"10"},{"size":2183,"mtime":1631958683990,"results":"14","hashOfConfig":"10"},{"size":2356,"mtime":1631958615483,"results":"15","hashOfConfig":"10"},{"size":2121,"mtime":1631958652756,"results":"16","hashOfConfig":"10"},{"size":1035,"mtime":1631958788540,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"121n7gn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/taerikim/Documents/web/Project/taeflix-plus/src/index.tsx",[],["41","42"],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/App.tsx",[],"/Users/taerikim/Documents/web/Project/taeflix-plus/src/Router.tsx",["43"],"import React from 'react'\nimport Profile from './routes/Auth'\nimport { HashRouter, Route,Switch } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Navigator from './components/Navigator';\nimport MyList from './routes/MyList';\nimport Detail from './routes/Detail';\n\nconst USER_LS = 'currentUser'\n\nconst AppRouter = () => {\n    return (\n        <HashRouter>\n        <Switch>\n          <Route path='/' exact={true} component={Profile} />\n          <Route path='/browse' component={Navigator}/>\n          <Route path='/browse/mylist' component={MyList} />\n          <Route path='/browse/detail'  component={Detail} />\n          <Route path='/browse' exact={true}  component={Home} />\n          </Switch>\n        </HashRouter>\n    )\n}\n\nexport default AppRouter\n","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Auth.tsx",["44","45","46","47","48","49","50","51","52"],"\nimport React, { useEffect, useRef, useState } from 'react'\nimport  User  from '../components/User';\nimport './Profile.css'\n\nconst USERS_LS = 'users'\nconst CLASS_HIDDEN = 'hidden'\nconst CURRENT_USER_LS = 'currentUser'\n\nconst Auth = () => {\n\n    const [name,setName] = useState('')\n    // const [items,setItems] = useState(localStorage.getItem(USERS_LS)?JSON.parse(localStorage.getItem(USERS_LS)):[])\n    const inputBox = useRef()\n    const UserBox = useRef()\n\n        const onSubmit = () => {\n            // e.preventDefault();\n            // if (name.length === 0){\n            //     return;\n            // }\n            // const newItem ={\n            //     name:name,\n            //     id: Date.now()\n            // };\n            // if (items !== []){\n            //     localStorage.setItem(USERS_LS,JSON.stringify(items.concat(newItem)))\n            // }\n            // setItems(items.concat(newItem))\n            // setName('')\n\n            // history.push({\n            //     pathname:'/browse',\n            //     state:{name:newItem.name,id:newItem.id}\n            // })\n         }\n        const onChange = () =>{\n            // setName(e.target.value)   \n            }\n\n        const onBtnDelete = () => {\n                // const cleanToDos = items.filter(function (toDo) {\n                //     return toDo.id !== parseInt(e.target.parentNode.id);\n                // });\n                // localStorage.setItem(USERS_LS,JSON.stringify(cleanToDos))\n                // setItems(cleanToDos)\n            }\n\n            const onBtnBack = ()=>{\n            }\n\n        return(\n            <section className='profile_container'>\n            <div className='inputbox' >\n            <span className='title'>프로필 추가</span>\n            <span className='desc'>다른 사용자를 등록하시려면 프로필을 추가하세요.</span>\n            <form onSubmit={onSubmit}>\n                <input type='text' placeholder='이름'\n                value={name}\n                onChange={onChange}/>\n                <button>확인</button>\n            </form>\n            </div>\n            <div className='profilebox'>\n                <span className='title'>프로필 관리</span>\n                    <button onClick={onBtnBack}>Back</button>\n                <div className='userbox'>\n            {/* {items.map(item => (\n                <User \n                key={item.id}\n                id={item.id} \n                onBtnClick={onBtnDelete} \n                name={item.name}></User>))} */}\n                </div>\n            </div>\n    </section>\n        )\n}\n\nexport default Auth","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/MyList.tsx",["53","54","55","56"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport Movie from '../components/Movie'\nimport './MyList.css'\n\n\n\nconst MyList =()=>{\n\n    //  const [movies,setMovies] = useState([])\n    //  const [isLoading,setLoading] = useState(true) \n    //  const getMovies = async () => {\n    //      const {\n    //        data: {\n    //          data: { movies }\n    //        }\n    //      } = await axios.get(\n    //        \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    //      );\n    //      setMovies(movies)\n    //      setLoading(false)\n    //    };\n\n    // useEffect(()=> {\n    //    const CURRENT_USER_LS = 'currentUser'\n    //   if(location.state === undefined && !(localStorage.getItem(CURRENT_USER_LS))){\n    //       history.push('/');\n    //   }\n    //   getMovies();\n    // },[])\n\n    //   const USERNAME = localStorage.getItem('currentUser')\n    //     const listNumber = localStorage.getItem(USERNAME)? JSON.parse(localStorage.getItem(USERNAME)).map(x => x.id) : null;\n    //     const movieList = listNumber !== null ? listNumber.map(x => movies[x]) : null;\n    //     if(listNumber !== null) {\n    //         return (\n    //             <>\n    //             {isLoading ? <h1 className='loading'>Loading..</h1> :\n    //             <>\n    //             <div className='mylist_title'>MY LIST</div>\n    //             <div className='mylistbox'>\n    //                 {movieList.map((movie,index) => \n    //               <Movie \n    //               key={index} \n    //               id={index} \n    //               title={movie.title} \n    //               image={movie.medium_cover_image}\n    //               year={movie.year}\n    //               runtime={movie.runtime}\n    //               genres={movie.genres}\n    //               summary={movie.summary}\n    //               largeImage={movie.large_cover_image}\n    //               />)}\n    //             </div>\n    //             </>\n    //             }\n    //             </>        \n    //             )\n            \n    //     }else {\n    //         return <h1 className='loading'>EMPTY </h1>\n    //     }\n    return <div>My list</div>\n}\n\nexport default MyList;","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Home.tsx",["57","58","59","60","61","62"],"import axios from 'axios';\nimport Movie from '../components/Movie'\nimport React, { useEffect, useState } from 'react'\nimport BestMovie from '../components/BestMovie'\nimport './Home.css'\n\nconst CURRENT_USER_LS = 'currentUser'\n\n\n\nconst Home = () => {\n  //   const [movies,setMovies] = useState([])\n  //   const [isLoading,setLoading] = useState(true) \n\n  //  const getMovies = async () => {\n  //       const {\n  //         data: {\n  //           data: { movies }\n  //         }\n  //       } = await axios.get(\n  //         \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n  //       );\n  //       setMovies(movies)\n  //       setLoading(false)\n  //     };\n  //     useEffect(()=> {\n  //       if(location.state === undefined && !(localStorage.getItem(CURRENT_USER_LS))){\n  //           history.push('/');\n  //       }\n  //       getMovies();\n  //     },[])\n    \n  //       return (\n  //       <section className='container'>\n  //           {isLoading? <h1 className='loading'>Loading...</h1> \n  //           :<div className='movies'>\n  //           <div className='bestMovie_container'>\n  //             <div className='movie1'>\n  //             <BestMovie title={movies[0].title} image={movies[0].large_cover_image}></BestMovie>\n  //             </div>\n  //             <div className='sidebox'>\n  //               <div className='movie2'>\n  //             <BestMovie title={movies[1].title} image={movies[1].large_cover_image}></BestMovie>    \n  //               </div>\n  //               <div className='movie3'>\n  //             <BestMovie title={movies[2].title} image={movies[2].large_cover_image}></BestMovie>\n  //               </div>\n  //           </div>\n  //             </div>\n  //           <div className='movie_container'>\n  //             {movies.map((movie,index) => \n  //             <Movie \n  //             key={movie.id} \n  //             id={index} \n  //             title={movie.title} \n  //             image={movie.medium_cover_image}\n  //             year={movie.year}\n  //             runtime={movie.runtime}\n  //             genres={movie.genres}\n  //             summary={movie.summary}\n  //             largeImage={movie.large_cover_image}\n  //             />)}\n  //           </div>\n  //           </div>\n  //           }\n  //       </section>\n\n  //       )\n  return (\n    <div>Home</div>\n  )\n}\n\nexport default Home; ","/Users/taerikim/Documents/web/Project/taeflix-plus/src/routes/Detail.tsx",["63","64"],"import React, { useEffect, useState } from 'react'\nimport './Detail.css'\n\n\nconst Detail = () => {\n   \n    // const USERNAME = localStorage.getItem('currentUser')\n    // console.log(USERNAME)\n    // // const [id,setId] = useState(localStorage.getItem(USERNAME)?JSON.parse(localStorage.getItem(USERNAME)):[])\n\n\n    // // useEffect(()=>{\n    // //     if(location.state === undefined){\n    // //         history.push('/browse')\n    // //     }\n\n    // // },[])\n\n    // // useEffect(()=> {\n    // //     const USERNAME = localStorage.getItem('currentUser')\n    // //     localStorage.setItem(USERNAME,JSON.stringify(id))\n    // // })\n\n\n    //     const onClick = () => {\n    //         // const newId = {\n    //         //     id:location.state.id\n    //         // }\n    //         // setId(id.concat(newId))\n    //     }\n    //     const onExitBtnClick = () => {\n    //         history.push('/browse')\n    //     }\n    //     if(location.state){\n    //     return (\n    //         <div className='detailbox'>\n    //             <div className='imgbox'>\n    //             <img src={location.state.largeImage} alt={location.state.title}/>\n    //             </div>\n    //             <div className='detail_info'>\n    //                 <div className='btnbox'><button onClick={onExitBtnClick}>X</button></div>\n    //             <span className='title'>{location.state.title}</span>\n    //             <div className='detail_infobox'>\n    //             <span className='detail_year'>{location.state.year}</span>\n    //             <span className='detail_runtime'>{`${location.state.runtime}m`}</span>\n    //             <button onClick={onClick}>+ My List</button>\n    //             </div>\n    //             <ul className='genre'>\n    //                 {/* {location.state.genres.map((genre,index)=> (<li key={index}>{genre}</li>))} */}\n    //                 </ul>\n    //             <span className='summary'>{location.state.summary}</span>\n    //             </div>\n    //         </div>\n    //     )\n    //     }else {\n    //         return null;\n    //     }\n    return <div>Detail</div>\n}\n\nexport default Detail;","/Users/taerikim/Documents/web/Project/taeflix-plus/src/components/Navigator.tsx",["65","66","67"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Navigator.css'\n\nconst CURRENT_USER_LS = 'currentUser'\n\n\nconst Navigator = () => {\n\n    // useState(()=>{\n    //     if(location.state){\n    //         localStorage.setItem(CURRENT_USER_LS,location.state.name)\n    //     }\n    // },[])\n    //     const onClick = () => {\n    //         localStorage.removeItem(CURRENT_USER_LS)\n    //         history.push('/')\n    //     }\n\n    //     const name = localStorage.getItem(CURRENT_USER_LS)\n    //       return( \n    //           <div className='navbar'>\n    //             <div className='logo'>TAEFLIX</div>\n    //             <Link to='/browse'>Home</Link>\n    //             <Link to='/browse/mylist'>My List</Link>\n    //             <div className='user_info'>\n    //             <span className='name'>{name}</span>\n    //             <button onClick={onClick}>ｘ</button>\n    //             </div>\n    //             </div>\n    //       )\n    return <nav>NAV</nav>\n}\n\nexport default Navigator",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":7,"nodeType":"74","messageId":"75","endLine":9,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":6,"column":7,"nodeType":"74","messageId":"75","endLine":6,"endColumn":15},{"ruleId":"72","severity":1,"message":"79","line":7,"column":7,"nodeType":"74","messageId":"75","endLine":7,"endColumn":19},{"ruleId":"72","severity":1,"message":"80","line":8,"column":7,"nodeType":"74","messageId":"75","endLine":8,"endColumn":22},{"ruleId":"72","severity":1,"message":"81","line":12,"column":17,"nodeType":"74","messageId":"75","endLine":12,"endColumn":24},{"ruleId":"72","severity":1,"message":"82","line":14,"column":11,"nodeType":"74","messageId":"75","endLine":14,"endColumn":19},{"ruleId":"72","severity":1,"message":"83","line":15,"column":11,"nodeType":"74","messageId":"75","endLine":15,"endColumn":18},{"ruleId":"72","severity":1,"message":"84","line":41,"column":15,"nodeType":"74","messageId":"75","endLine":41,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"85","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"86","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"87","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"86","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"87","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"76","line":3,"column":17,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"72","severity":1,"message":"85","line":3,"column":28,"nodeType":"74","messageId":"75","endLine":3,"endColumn":36},{"ruleId":"72","severity":1,"message":"88","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":17},{"ruleId":"72","severity":1,"message":"80","line":7,"column":7,"nodeType":"74","messageId":"75","endLine":7,"endColumn":22},{"ruleId":"72","severity":1,"message":"76","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"85","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"85","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"89","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"80","line":5,"column":7,"nodeType":"74","messageId":"75","endLine":5,"endColumn":22},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'USER_LS' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'User' is defined but never used.","'USERS_LS' is assigned a value but never used.","'CLASS_HIDDEN' is assigned a value but never used.","'CURRENT_USER_LS' is assigned a value but never used.","'setName' is assigned a value but never used.","'inputBox' is assigned a value but never used.","'UserBox' is assigned a value but never used.","'onBtnDelete' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Movie' is defined but never used.","'BestMovie' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]